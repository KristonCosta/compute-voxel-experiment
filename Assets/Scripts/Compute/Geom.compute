// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Gen
#ifdef GL_ES
precision mediump float;
#endif

static const float3 normals[6] = {
    float3(0, 1, 0),
    float3(0, -1, 0),
    float3(-1, 0, 0),
    float3(1, 0, 0),
    float3(0, 0, 1),
    float3(0, 0, -1)
};

static const uint quad_config[6][5] = {
    {7, 6, 5, 4, 0},
    {0, 1, 2, 3, 1},
    {7, 4, 0, 3, 2},
    {5, 6, 2, 1, 3},
    {4, 5, 1, 0, 4},
    {6, 7, 3, 2, 5},
};

static const uint face_conf[6] = {
    0x1,
    0x2,
    0x4,
    0x8,
    0x10,
    0x20
    
};

struct FaceInfo
{
    uint3 coord;
    uint visible_faces;
    uint num_faces;
};

uint size_of_chunk;
AppendStructuredBuffer<FaceInfo> face_info;
RWStructuredBuffer<float> points;
uint height_of_chunk;

uint index_from_coord(uint3 coord) {
    return coord.z * height_of_chunk * size_of_chunk + coord.y * size_of_chunk + coord.x;
}

FaceInfo add_direction_if_valid(uint3 id, int dir, FaceInfo current_val)
{
    float3 normal = normals[dir];
    float3 adj_block = id + normal;
    
    if (all(adj_block >= 0) &&
        adj_block.x < size_of_chunk &&
        adj_block.z < size_of_chunk &&
        adj_block.y < height_of_chunk) {
        int adjacent_index = index_from_coord(adj_block);
        if (points[adjacent_index] > 0)
        {
            return current_val;
        }
    }
    current_val.visible_faces |= face_conf[dir];
    current_val.num_faces += 1;
    return current_val;
}

[numthreads(8, 8, 8)]
void Gen(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= size_of_chunk - 1 ||
        id.z >= size_of_chunk - 1 ||
        id.y >= height_of_chunk - 1 ||
        any(id <= 0)) {
        return;
    }

    if (points[index_from_coord(id)] <= 0)
    {
        return;
    }
 
    FaceInfo info;
    info.coord = id;
    info.num_faces = 0;
    info.visible_faces = 0x0;
    info = add_direction_if_valid(id, 0, info);
    info = add_direction_if_valid(id, 1, info);
    info = add_direction_if_valid(id, 2, info);
    info = add_direction_if_valid(id, 3, info);
    info = add_direction_if_valid(id, 4, info);
    info = add_direction_if_valid(id, 5, info);


    if (info.num_faces <= 0)
    {
        return;
    }
    
    face_info.Append(info);
}
